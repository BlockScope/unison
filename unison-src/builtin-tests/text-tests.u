text.tests = do
 !text.eq.tests
 !text.ord.tests

text.eq.tests = do
  check "Empty Text literal" do
    _ = ""
    true
  check "Text literal" do
    _ = "foo"
    true
  check "Text equality: empty" do "" Text.== ""
  check "Text equality: non empty" do "foo" Text.== "foo"
  check "Text inequality: empty (1)" do not ("foo" Text.== "")
  check "Text inequality: empty (2)" do not ("" Text.== "foo")
  check "Text inequality: non empty" do not ("foo" Text.== "bar")
  checkEqual "Universal equality with Text: empty" "" ""
  checkEqual "Universal equality with Text: non empty" "foo" "foo"
  check "Universal inequality with Text: empty (1)" do "foo" !== ""
  check "Universal inequality with Text: empty (2)" do "" !== "foo"
  check "Universal inequality with Text: non empty" do "foo" !== "bar"
  checkEqual "Universal equality with Text: composite" (Some ["foo", "bar"]) (Some ["foo", "bar"])
  check "Universal inequality with Text: composite" do (Some ["foo", "bar"]) !== (Some ["foo", "baz"])

text.ord.tests = do
  check "Text ordering (1)" do "a" > ""
  check "Text ordering (2)" do "" < "a"
  check "Text ordering (3)" do "ba" > "b"
  check "Text ordering (4)" do "b" > "ab"
  check "Text ordering (5)" do "ac" > "ab"

  checkEqual "Universal ordering with Text (1)" (Universal.compare "a" "") +1
  checkEqual "Universal ordering with Text (2)" (Universal.compare "" "a") -1
  checkEqual "Universal ordering with Text (3)" (Universal.compare "ba" "b") +1
  checkEqual "Universal ordering with Text (4)" (Universal.compare "b" "ab") +1
  checkEqual "Universal ordering with Text (5)" (Universal.compare "ac" "ab") +1
  -- TODO ordering tests, has to include a simple composite case, e.g. inside Option

-- TODO op tests

-- TODO conversion tests (number, char, string, etc to Text)
