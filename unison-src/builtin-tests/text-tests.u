text.tests = do
 !text.lit.tests
 !text.eq.tests
 !text.ord.tests
 !text.ops.tests

text.lit.tests = do
  check "Empty Text literal" do
    _ = ""
    true
  check "Text literal" do
    _ = "foo"
    true

text.eq.tests = do
  check "Text equality: empty" do "" Text.== ""
  check "Text equality: non empty" do "foo" Text.== "foo"
  check "Text inequality: empty (1)" do not ("foo" Text.== "")
  check "Text inequality: empty (2)" do not ("" Text.== "foo")
  check "Text inequality: non empty" do not ("foo" Text.== "bar")
  checkEqual "Universal equality with Text: empty" "" ""
  checkEqual "Universal equality with Text: non empty" "foo" "foo"
  check "Universal inequality with Text: empty (1)" do "foo" !== ""
  check "Universal inequality with Text: empty (2)" do "" !== "foo"
  check "Universal inequality with Text: non empty" do "foo" !== "bar"
  checkEqual "Universal equality with Text: composite" (Some ["foo", "bar"]) (Some ["foo", "bar"])
  check "Universal inequality with Text: composite" do (Some ["foo", "bar"]) !== (Some ["foo", "baz"])

text.ord.tests = do
  check "Text ordering (1)" do "a" > ""
  check "Text ordering (2)" do "" < "a"
  check "Text ordering (3)" do "ba" > "b"
  check "Text ordering (4)" do "b" > "ab"
  check "Text ordering (5)" do "ac" > "ab"

  checkEqual "Universal ordering with Text (1)" (Universal.compare "a" "") +1
  checkEqual "Universal ordering with Text (2)" (Universal.compare "" "a") -1
  checkEqual "Universal ordering with Text (3)" (Universal.compare "ba" "b") +1
  checkEqual "Universal ordering with Text (4)" (Universal.compare "b" "ab") +1
  checkEqual "Universal ordering with Text (5)" (Universal.compare "ac" "ab") +1

text.ops.tests = do
  checkEqual "Text.++" ("" ++ "ab" ++ "cd" ++ "") "abcd"
  checkEqual "Text.take (1)" (Text.take 0 "abc") ""
  checkEqual "Text.take (2)" (Text.take 2 "abc") "ab"
  checkEqual "Text.take (3)" (Text.take 3 "abc") "abc"
  checkEqual "Text.take (4)" (Text.take 100 "abc") "abc"
  checkEqual "Text.take (5)" (Text.take 3 "") ""
  checkEqual "Text.drop (1)" (Text.drop 0 "abc") "abc"
  checkEqual "Text.drop (2)" (Text.drop 2 "abc") "c"
  checkEqual "Text.drop (3)" (Text.drop 3 "abc") ""
  checkEqual "Text.drop (4)" (Text.drop 100 "abc") ""
  checkEqual "Text.drop (5)" (Text.drop 3 "") ""
  checkEqual "Text.size (1)" (Text.size "") 0
  checkEqual "Text.size (2)" (Text.size "abc") 3
  checkEqual "Text.uncons (1)" (Text.uncons "") None
  checkEqual "Text.uncons (2)" (Text.uncons "a") (Some (?a, ""))
  checkEqual "Text.uncons (3)" (Text.uncons "abc") (Some (?a, "bc"))
  checkEqual "Text.unsnoc (1)" (Text.unsnoc "") None
  checkEqual "Text.unsnoc (2)" (Text.unsnoc "a") (Some ("", ?a))
  checkEqual "Text.unsnoc (3)" (Text.unsnoc "abc") (Some ("ab", ?c))


  -- New ops
  --  reverse
  --  repeat
  --  toUppercase
  --  toLowercase

  -- conversions
  --  toCharList
  --  fromCharList
  --  toUft8
  --  fromUtf8


  -- TODO op tests
  -- TODO conversion tests (number char string etc to Text)

  -- TODO pattern matching tests include Pattern api I reckon

  ()
