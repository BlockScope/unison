
basicFormatting = {{
  # Basic formatting
  
    Paragraphs are separated by one or more blanklines.
    
    Text can be __bold__, *italicized*, ~~strikethrough~~, or
    ''monospaced''.
    
    You can link to Unison terms, types, and external URLs:
    
    * [An external url](https://unisonweb.org)
    * {Some} is a term link; {type Optional} is a type link
    * [A named type link]({type Optional}) and [a named term link]({Some}).
      Term links are handy for linking to other documents!
    
    ## Escaping formatting
    
       If you have some inline text you want to leave unparsed
       and have it render in a monospace font, surround it in
       two single quotes, like so: ''__some bold text__''
    
       If you don't want the monospace rendering, you can 
       use ''{{ .. }}'' to escape out to regular Unison syntax,
       for instance {{ docWord "__not bold__" }}.
       
    ## Sections and subsections
    
       Sections consist of section titles followed by zero or
       more paragraphs or other section elements (such as
       subsections). Sections can be empty.
}}

lists = {{

# Lists

## Bulleted lists

Bulleted lists can use ''+'', ''-'', or ''*'' for the bullets. They can be nested, to any depth:

+ A
+ B
+ C
  - C1
  * C2

## Numbered lists

1. A
2. B
3. C

The first number of the list determines the starting number in the rendered output. The other numbers are ignored:

Numbered lists can be nested as well, and combined with bulleted lists:

1. Wake up.
  + What am I doing here?
  + In this nested list. 
2. Take shower.  
3. Get dressed.

}}

evaluation = {{

## Evaluation 

Expressions can be evaluated inline, for instance @eval{1 + 1}.

Blocks of code can be evaluated as well, for instance:

```
id x = x

id (sq 10)
``` 

}}

sq x = x Nat.* x

--- todo
---

doc.guide = {{

# Unison documentation format

{{ basicFormatting }}

{{ lists }}

## Including Unison source code

'''
@source{ type Optional, id }
'''

Renders as:

@source{ type Optional, id }

You can also render just the signatures of a collection of terms: 

'''
@signatures{ id, Some, None }
'''

Renders as:

@signatures{ id, Some, None }

You can reference a signature inline, like so 

'''
An inline signature @signature{id}.
'''

Renders as:

An inline signature @signature{id}.

## Including other documents

'''
"And what is the use of a book," thought {{name}}, "without pictures or conversations?"

* [The documentation]({{baseUrl}}/docs)
'''

"And what is the use of a book," thought {{name}}, "without pictures or conversations?"

## Non-unison code blocks 

A code block with no syntax highlighting starts with at least two {{ code (word "'") }} characters, and is terminated by the same number of {{ code (word "'") }} characters. 

''''
'''
Not formatted. Rendered as a code block with no syntax highlighting.
'''
''''

Renders as:

'''
Not formatted. Rendered as a code block with no syntax highlighting.
'''

You can use triple (or greater) backticks plus a language name for blocks with syntax highlighting.

'''
``` Haskell
-- A fenced code block which isn't parsed by Unison
reverse = foldl (flip (:)) []
```

``` Scala
// A fenced code block which isn't parsed by Unison
def reverse[A](xs: List[A]) = 
  xs.foldLeft(Nil : List[A])((acc,a) => a +: acc)
```
'''

Renders as:

``` Haskell
-- A fenced code block which isn't parsed by Unison
reverse = foldl (flip (:)) []
```

``` Scala
// A fenced code block which isn't parsed by Unison
def reverse[A](xs: List[A]) = 
  xs.foldLeft(Nil : List[A])((acc,a) => a +: acc)
```
}}

name = {{Alice}}
baseUrl = {{ https://unisonweb.org }}

