name: "release"

on:
  push:
    tags:
      - "release/*"

jobs:
  release:
    name: "release"
    runs-on: "ubuntu-latest"

    strategy:
      # Run each build to completion, regardless of if any have failed
      fail-fast: false
    steps:
      - name: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          tag_name: "${{github.ref}}"
          release_name: "${{github.ref}}"

  build:
    name: "build ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    needs: "release"

    strategy:
      # Run each build to completion, regardless of if any have failed
      fail-fast: false

      matrix:
        os:
          - ubuntu-18.04
          - macOS-10.15
        include:
          - os: ubuntu-20.04
            archive: ucm-linux.tar.gz
          - os: macOS-10.15
            archive: ucm-macos.tar.gz

    steps:
      - uses: actions/checkout@v2

      - name: install stack (Linux)
        if: runner.os == 'Linux'
        run: |
          curl -L https://github.com/commercialhaskell/stack/releases/download/v2.5.1/stack-2.5.1-linux-x86_64.tar.gz | tar -xz
          echo "$HOME/stack-2.5.1-linux-x86_64/" >> $GITHUB_PATH
      - name: install stack (macOS)
        if: runner.os == 'macOS'
        run: |
          curl -L https://github.com/commercialhaskell/stack/releases/download/v2.5.1/stack-2.5.1-osx-x86_64.tar.gz | tar -xz
          echo "$HOME/stack-2.5.1-osx-x86_64/" >> $GITHUB_PATH


      # One of the transcripts fails if the user's git name hasn't been set.
      - name: set git user info
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: remove ~/.stack/setup-exe-cache on macOS
        if: runner.os == 'macOS'
        run: rm -rf ~/.stack/setup-exe-cache

      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest codebase-ui and package with ucm
        run: |
          mkdir -p /tmp/ucm/ui
          UCM=$(stack path | awk '/local-install-root/{print $2}')/bin/unison
          cp $UCM /tmp/ucm/ucm
          wget -O/tmp/ucm.zip https://github.com/unisonweb/codebase-ui/releases/download/latest/ucm.zip
          unzip -d /tmp/ucm/ui /tmp/ucm.zip
          tar -c -z -f ${{matrix.archive}} -C /tmp/ucm .

      - name: "Upload ${{matrix.archive}}"
        uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          asset_path: "${{ matrix.archive }}"
          asset_name: "${{ matrix.archive }}"
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_content_type: "application/gzip"

